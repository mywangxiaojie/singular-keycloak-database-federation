version: '3'
volumes:
  postgres_data:
      driver: local
services:
  postgres:
      container_name: Keycloak17_Postgres
      image: postgres:latest
      volumes:
        - ./postgres:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: $POSTGRES_DB
        POSTGRES_PASSWORD: $KC_DB_PASSWORD
        POSTGRES_USER: $KC_DB_USERNAME
  keycloak:
      container_name: Keycloak17_Server   
      image: quay.io/keycloak/keycloak:17.0.1
      env_file:
        - .env
      environment:
        KC_FEATURES:
          authorization
          token-exchange
          docker
          impersonation
          scripts
          upload-scripts
          web-authn
          client-policies
          dynamic-scopes
      #DOCKER ENV KC_HTTPS_TRUST_STORE_FILE does not work
      #WorkAround is to add the TrustStore to the start up (Using Trust Store For AD LDAPS Certificate, you may not need this at all)
      entrypoint: /opt/keycloak/bin/kc.sh start --auto-build --https-trust-store-file=${KC_HTTPS_TRUST_STORE_FILE} --https-trust-store-password=${KC_HTTPS_TRUST_STORE_PASSWORD}
      #entrypoint: /opt/keycloak/bin/kc.sh start --auto-build 
      volumes:
        - ./data:/data:rw
      ports:
        - 8080:8080
        - 8443:8443
      depends_on:
        - postgres

#Note:
#Create a Server.keystore with the Servers HTTPS Certificate
#keytool -genkeypair -alias keycloak.local -keyalg RSA -keysize 2048 -validity 365 -keystore /data/server.keystore -dname "cn=KeyCloak,o=Org,c=AU" -keypass KEYSTOREPASSWORD -storepass KEYSTOREPASSWORD
#Command to Create the TrustStore
#keytool -import -alias YourAlias -file /data/Root-CA.cer -keystore /data/trust.keystore -storepass changeit
