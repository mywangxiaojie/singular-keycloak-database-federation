x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  postgres:
    image: postgres:15.5-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    environment:
      POSTGRES_DB: keycloak17
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
        tmpfs:
          size: 100000000
    ports:
      - 5432:5432
    logging: *logging

  mysql:
    image: mysql:5.7
    container_name: keycloakmysql
    restart: always
    environment:
      MYSQL_DATABASE: 'keycloak'
      MYSQL_USER: 'keycloak'
      MYSQL_PASSWORD: 'keycloak'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '13306:3306'
    expose:
      - '3306'
    volumes:
      - './.data/db:/var/lib/mysql'

  keycloak:
    container_name: keycloak17
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 10083:8080
      - 8543:8543
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://10.156.196.190:15432/keycloak17?user=keycloak&password=password"
      KF_DB_USERNAME: keycloak
      KF_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: 10.156.196.190
      KC_HTTP_PORT: 8080
      KC_HTTPS_PORT: 8543
      KC_HOSTNAME_STRICT_HTTPS: true
      # KC_HOSTNAME_URL: https://10.156.196.190:8443/
      KC_HOSTNAME_STRICT: false
      KF_HOSTNAME_STRICT_HTTPS: false
      PROXY_ADDRESS_FORWARDING: true
      KC_HTTP_ENABLED: true
      # KC_PROXY: edge
      # KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/tls.crt
      # KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/tls.key
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/tls.key
    volumes:
      # - ./server.crt.pem:/opt/keycloak/conf/tls.crt
      # - ./server.key.pem:/opt/keycloak/conf/tls.key
#      - ./server.crt.pem:/etc/x509/https/tls.crt
#      - ./server.key.pem:/etc/x509/https/tls.key
      - ./keycloak.server.crt:/etc/x509/https/tls.crt
      - ./keycloak.server.key:/etc/x509/https/tls.key
      

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.wal-compression'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
    ports:
      - ${PROMETHEUS_PORT}:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    logging: *logging

  grafana:
    image: grafana/grafana-oss:${GF_VERSION}
    restart: unless-stopped
    ports:
      - ${GF_SERVER_HTTP_PORT}:3000
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:${GF_SERVER_HTTP_PORT}/healthz"]
    environment:
      GF_LOG_LEVEL: ${GF_LOG_LEVEL}
      GF_AUTH_BASIC_ENABLED: true
      GF_AUTH_DISABLE_LOGIN_FORM: true
      GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: true
      GF_AUTH_GENERIC_OAUTH_ENABLED: true
      GF_AUTH_GENERIC_OAUTH_NAME: Keycloak
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: true
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
      GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_NAME: "email:primary"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: ${KC_HOSTNAME}:${KC_PORT}/realms/${KC_REALM_NAME}/protocol/openid-connect/auth
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: http://keycloak:${KC_PORT}/realms/${KC_REALM_NAME}/protocol/openid-connect/token
      GF_AUTH_GENERIC_OAUTH_API_URL: ${KC_HOSTNAME}:${KC_PORT}/realms/${KC_REALM_NAME}/protocol/openid-connect/userinfo
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    logging: *logging
